apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docker-tag-monitor.fullname" . }}-backend
  labels:
    {{- include "docker-tag-monitor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "docker-tag-monitor.selectorLabels" . | nindent 6 }}
      service: backend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "docker-tag-monitor.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        service: backend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.registry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: REFLEX_DB_URL
              value: "postgresql+psycopg://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database }}"
            - name: REDIS_URL
              value: "redis://{{ .Release.Name }}-valkey-primary:6379"
            - name: GUNICORN_WORKERS
              value: "{{ .Values.backend.processesPerReplica }}"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}

        - name: scraper
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.registry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:  # TODO: DockerHub credentials
            - name: REFLEX_DB_URL
              value: "postgresql+psycopg://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database }}"
            - name: DIGEST_REFRESH_COOLDOWN_INTERVAL
              value: {{ .Values.backend.digestRefreshCooldownInterval }}
            - name: MAX_REQUESTS_PER_SECOND
              value: {{ .Values.backend.maxRequestsPerSecond | quote }}
            - name: MAX_RETRIES_ON_RATE_LIMIT
              value: {{ .Values.backend.maxRetriesOnRateLimit | quote }}
            - name: SLEEP_INTERVAL_ON_RATE_LIMIT
              value: {{ .Values.backend.sleepIntervalOnRateLimit }}
          args:
            - "python"
            - "/app/update_database.py"
          # TODO: resources for the scraper?

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
