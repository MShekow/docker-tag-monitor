services:
  frontend:
    image: docker-tag-monitor:frontend
    build:
      context: .
      target: frontend
    ports:
      - "8000:8080"
    environment:
      CADDY_DOMAIN: ":8080"  # See https://caddyserver.com/docs/caddyfile/concepts#addresses
      BACKEND_DNS: "backend"
    depends_on:
      - backend

  backend:
    image: docker-tag-monitor:backend
    build:
      context: .
      target: backend
    ports:
      - "8081:8000"
    environment:
      REFLEX_DB_URL: "postgresql+psycopg://postgres:postgres@database:5432/postgres"
      REDIS_URL: "redis://valkey:6379"
      GUNICORN_WORKERS: 2
    depends_on:
      database:
        condition: service_healthy
      valkey:
        condition: service_healthy

  backend_scraper:
    image: docker-tag-monitor:backend
    build:
      context: .
      target: backend
    environment:
      REFLEX_DB_URL: "postgresql+psycopg://postgres:postgres@database:5432/postgres"
      # Docker Hub credentials, to avoid hitting rate limits, values are set in .env file
      DOCKER_USERNAME: "${DOCKER_USERNAME}"
      DOCKER_PASSWORD: "${DOCKER_PASSWORD}"
    depends_on:
      database:
        condition: service_healthy
    restart: on-failure
    command:
      - "python"
      - "/app/update_database.py"

  database:
    image: postgres:17.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - docker-tag-monitor:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      start_period: 30s
      start_interval: 1s
      interval: 1m
      timeout: 5s
      retries: 5

  valkey:  # Redis alternative
    image: bitnami/valkey:8.0.2
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      start_period: 30s
      start_interval: 1s
      interval: 1m
      timeout: 3s
      retries: 5

volumes:
  docker-tag-monitor:
    driver: local
